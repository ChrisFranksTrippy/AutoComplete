//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace autocomplete.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class StyliConnection : DbContext
    {
        public StyliConnection()
            : base("name=StyliConnection")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<StyliList> StyliLists { get; set; }
    
        public virtual ObjectResult<spStyliSearch_Result> spStyliSearch(string effectiveLength, string fldRndSur, string instrumentType, string partNo, string shankClearance, string shankLength, string stylusType, string tipAngle, string tipMaterial, string tipSize, string tipType)
        {
            var effectiveLengthParameter = effectiveLength != null ?
                new ObjectParameter("EffectiveLength", effectiveLength) :
                new ObjectParameter("EffectiveLength", typeof(string));
    
            var fldRndSurParameter = fldRndSur != null ?
                new ObjectParameter("FldRndSur", fldRndSur) :
                new ObjectParameter("FldRndSur", typeof(string));
    
            var instrumentTypeParameter = instrumentType != null ?
                new ObjectParameter("InstrumentType", instrumentType) :
                new ObjectParameter("InstrumentType", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var shankClearanceParameter = shankClearance != null ?
                new ObjectParameter("ShankClearance", shankClearance) :
                new ObjectParameter("ShankClearance", typeof(string));
    
            var shankLengthParameter = shankLength != null ?
                new ObjectParameter("ShankLength", shankLength) :
                new ObjectParameter("ShankLength", typeof(string));
    
            var stylusTypeParameter = stylusType != null ?
                new ObjectParameter("StylusType", stylusType) :
                new ObjectParameter("StylusType", typeof(string));
    
            var tipAngleParameter = tipAngle != null ?
                new ObjectParameter("TipAngle", tipAngle) :
                new ObjectParameter("TipAngle", typeof(string));
    
            var tipMaterialParameter = tipMaterial != null ?
                new ObjectParameter("TipMaterial", tipMaterial) :
                new ObjectParameter("TipMaterial", typeof(string));
    
            var tipSizeParameter = tipSize != null ?
                new ObjectParameter("TipSize", tipSize) :
                new ObjectParameter("TipSize", typeof(string));
    
            var tipTypeParameter = tipType != null ?
                new ObjectParameter("TipType", tipType) :
                new ObjectParameter("TipType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spStyliSearch_Result>("spStyliSearch", effectiveLengthParameter, fldRndSurParameter, instrumentTypeParameter, partNoParameter, shankClearanceParameter, shankLengthParameter, stylusTypeParameter, tipAngleParameter, tipMaterialParameter, tipSizeParameter, tipTypeParameter);
        }
    }
}
